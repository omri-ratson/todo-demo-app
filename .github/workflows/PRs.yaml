name: Java Quarkus todo app CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build with Maven
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
#        run: mvn -B verify #org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
        run: mvn -B verify sonar:sonar -Dsonar.projectKey=omri-ratson_todo-demo-app -Dsonar.organization=omri-ratson -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN
#      # Triggering SonarQube analysis as results of it are required by Quality Gate check.
#      - name: SonarQube Scan
#        uses: sonarsource/sonarqube-scan-action@master
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
#      # Check the Quality Gate status.
#      - name: SonarQube Quality Gate check
#        id: sonarqube-quality-gate-check
#        uses: sonarsource/sonarqube-quality-gate-action@master
#        # Force to fail step after specific time.
##        timeout-minutes: 5
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }} #OPTIONAL
#
#      # Optionally you can use the output from the Quality Gate in another step.
#      # The possible outputs of the `quality-gate-status` variable are `PASSED`, `WARN` or `FAILED`.
#      - name: "Example show SonarQube Quality Gate Status value"
#        run: echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"


#      - name: Analyze with SonarCloud Scan
#        uses: sonarsource/sonarcloud-github-action@master
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}